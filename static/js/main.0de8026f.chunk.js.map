{"version":3,"sources":["components/table-item/inline.js","components/table-item/index.js","components/table-item/table-item.js","components/table-list/index.js","components/table-list/table-list.js","services/dadata-service/dadata-service.js","components/modal-view/index.js","components/modal-view/modal-view.js","components/app/index.js","components/app/app.js","index.js"],"names":["Inline","state","edit","companyAddress","_this","props","onEdit","setState","handleChange","event","target","value","onBlur","onKeyDown","key","itemEdit","id","_this$state","this","react_default","a","createElement","autoFocus","className","type","onChange","onClick","Component","TableItem","inn","_this$props","companyName","ogrn","registrationDate","onDeleted","indx","react","scope","inline_Inline","TableList","_ref","companyList","items","map","item","itemProps","Object","objectWithoutProperties","table_item","assign","DadataService","_apiBase","_apiKey","getCompany","http","XMLHttpRequest","open","setRequestHeader","data","send","JSON","parse","responseText","suggestions","ModalView","danger","onClose","modalToggle","formValidation","defineProperty","name","handleSubmit","preventDefault","itemAdd","modalAboard","addData","length","trim","undefined","address","registration_date","classList","remove","add","document","getElementsByClassName","disabled","modalVisible","role","aria-hidden","onSubmit","maxLength","App","newId","createCompanyItem","Date","toLocaleDateString","onItemEdit","findIndex","concat","toConsumableArray","slice","deleteItem","_ref2","_ref3","_ref4","newItem","_ref5","_this2","components_modal_view","components_table_list","ReactDOM","render","components_app","getElementById"],"mappings":"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","file":"static/js/main.0de8026f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Inline extends Component {\r\n\r\n    state =  {\r\n        edit: false,\r\n        companyAddress: this.props.companyAddress\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            companyAddress: event.target.value\r\n        });\r\n    };\r\n\r\n    onBlur = () => {\r\n        this.setState({\r\n            companyAddress: this.props.companyAddress,\r\n            edit: false\r\n        });\r\n    };\r\n\r\n    onKeyDown = (event) => {\r\n        \r\n        if(event.key === 'Enter') {\r\n            const { itemEdit } = this.props;\r\n            itemEdit(this.props.id, this.state.companyAddress);\r\n            this.setState({\r\n                edit: false\r\n            });\r\n        };\r\n\r\n        if(event.key === 'Escape') this.onBlur();\r\n    };\r\n\r\n    render() {\r\n        const { edit, companyAddress } = this.state;\r\n\r\n        if(edit) {\r\n            return (\r\n                <td>\r\n                    <form>\r\n                        <input autoFocus \r\n                            className=\"form-control\" \r\n                            type=\"text\"\r\n                            value={companyAddress}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.onBlur}\r\n                            onKeyDown={this.onKeyDown}\r\n                            ></input>\r\n                    </form>\r\n                </td>\r\n            );\r\n        };\r\n        return (\r\n            <td onClick={this.onEdit}>\r\n                {companyAddress}\r\n            </td>\r\n        )\r\n    };\r\n}","import TableItem from \"./table-item\";\r\n\r\nexport default TableItem;","import React, {Component, Fragment} from 'react';\r\n\r\nimport Inline from './inline';\r\n\r\nexport default class TableItem extends Component {\r\n    state = {\r\n        inn: this.props.inn\r\n    };\r\n\r\n    render() {\r\n        const { id, companyName, companyAddress, \r\n            ogrn, inn, registrationDate, onDeleted,\r\n                itemEdit, indx } = this.props;\r\n                \r\n        return (\r\n            <Fragment>\r\n                <th scope=\"row\">{indx+1}</th>\r\n                <td>{companyName}</td>\r\n                <Inline id={id} companyAddress={companyAddress} \r\n                        itemEdit={itemEdit}/>\r\n                <td>{ogrn}</td>\r\n                <td >{inn}</td>\r\n                <td>{registrationDate}</td>\r\n                <td>\r\n                    <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm\"\r\n                    onClick={onDeleted}>\r\n                    Удалить\r\n                    </button>\r\n                </td>\r\n            </Fragment>\r\n        );\r\n    };\r\n};","import TableList from \"./table-list\";\r\n\r\nexport default TableList;","import React from 'react';\r\n\r\nimport TableItem from '../table-item';\r\n\r\nconst TableList = ({companyList, onDeleted, itemEdit}) => {\r\n    const items = companyList.map((item, indx) => {\r\n        const { id, ...itemProps} = item;\r\n\r\n        return (\r\n            <tr key={id}>\r\n                <TableItem {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    indx={indx}\r\n                    id={id}\r\n                    itemEdit={itemEdit}\r\n                />\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <table className=\"table table-hover\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Наименование</th>\r\n                    <th scope=\"col\">Адрес</th>\r\n                    <th scope=\"col\">ОГРН</th>\r\n                    <th scope=\"col\">ИНН</th>\r\n                    <th scope=\"col\">Дата регистрации</th>\r\n                    <th scope=\"col\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { items }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TableList;","\r\nexport default class DadataService { \r\n    _apiBase = 'https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party';\r\n    _apiKey = 'd77c6388b5bc194db5fa9a4ed2eaf963d3c4282c';\r\n\r\n    getCompany = (value) => {\r\n\r\n        const http = new XMLHttpRequest();\r\n\r\n        http.open(\"POST\", \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party\", false);\r\n        http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        http.setRequestHeader(\"Authorization\", \"Token \" + this._apiKey);\r\n\r\n        const data = \"{ \\\"query\\\": \\\"\" + value + \"\\\" }\";\r\n\r\n        http.send(data);\r\n        \r\n        const response = JSON.parse(http.responseText);\r\n        \r\n        return response.suggestions[0];\r\n    };\r\n};","import ModalView from \"./modal-view\";\r\n\r\nexport default ModalView;","import React, { Component } from 'react';\r\n\r\nimport DadataService from '../../services/dadata-service/dadata-service';\r\nimport './modal-view.css';\r\n\r\nexport default class ModalView extends Component {\r\n    \r\n    state = {\r\n        companyName: '',\r\n        companyAddress: '',\r\n        ogrn: '',\r\n        inn: '',\r\n        registrationDate: '',\r\n        danger: false\r\n    };\r\n\r\n    onClose = () => {\r\n        const {modalToggle} = this.props;\r\n\r\n        this.setState({\r\n            companyName: '',\r\n            companyAddress: '',\r\n            ogrn: '',\r\n            inn: '',\r\n            registrationDate: ''\r\n        });\r\n\r\n        modalToggle();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.formValidation(event);\r\n\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { itemAdd } = this.props;\r\n        itemAdd(this.state);\r\n\r\n        this.onClose();\r\n    };\r\n    \r\n    modalAboard = (event) => {\r\n        if(event.target.className === 'modal') this.onClose(); \r\n    };\r\n\r\n    addData = () => {\r\n        let {inn} = this.state;\r\n        if(inn.length >=10) {\r\n            let dadataService = new DadataService();\r\n            let item = dadataService.getCompany(inn.trim());\r\n            if(item === undefined) {\r\n                this.setState({companyName: 'Нет такой компании'});\r\n                return null;\r\n            }\r\n            this.setState({\r\n                companyName: item.value,\r\n                companyAddress: item.data.address.value,\r\n                ogrn: item.data.ogrn,\r\n                registrationDate: item.data.state.registration_date,\r\n                danger: false\r\n            })\r\n        };\r\n    }\r\n\r\n    formValidation = (event) => {\r\n        switch (event.target.name) {\r\n            case 'ogrn' : \r\n                event.target.value.length === 12 ? event.target.classList.remove('danger') : event.target.classList.add('danger');\r\n                this.setState({danger: true});\r\n                break;\r\n            case 'inn' :\r\n                event.target.value.length >= 10 || event.target.value.length <= 12  ? event.target.classList.remove('danger') : event.target.classList.add('danger');\r\n                this.setState({danger: true});\r\n                break;\r\n            default: \r\n                event.target.value.length > 3 ? event.target.classList.remove('danger') : event.target.classList.add('danger');\r\n                this.setState({danger: true});\r\n                break;\r\n        };\r\n\r\n        if(!document.getElementsByClassName('danger').length) {\r\n            this.setState({danger: false});\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { modalVisible } = this.props;\r\n        const { companyName, companyAddress, ogrn, inn, registrationDate, danger } = this.state;\r\n        let disabled;\r\n\r\n        if((!companyName || !companyAddress \r\n            || !ogrn || !inn || !registrationDate) || danger) disabled = true;\r\n\r\n        if(!modalVisible) return null;\r\n        return (\r\n            <div onClick={this.modalAboard} className=\"modal\" role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Добавить компанию</h5>\r\n                            <button type=\"button\"\r\n                                className=\"close\"\r\n                                onClick={this.onClose}\r\n                                >\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"form-group\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <label className=\"col\">Наименование\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\" \r\n                                        value={companyName} \r\n                                        onChange={this.handleChange} \r\n                                        name=\"companyName\"/>\r\n                                </label>\r\n                                <label className=\"col\">Адрес\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\" \r\n                                        value={companyAddress} \r\n                                        onChange={this.handleChange} \r\n                                        name=\"companyAddress\"/>\r\n                                </label>\r\n                                <label className=\"col\">ОГРН\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\" \r\n                                        value={ogrn} \r\n                                        onChange={this.handleChange}\r\n                                        maxLength=\"12\" \r\n                                        name=\"ogrn\" />\r\n                                </label>\r\n                                <div className=\"col\">\r\n                                    <label>ИНН\r\n                                        <input type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            value={inn} \r\n                                            onChange={this.handleChange} \r\n                                            name=\"inn\"\r\n                                            maxLength=\"11\"/>\r\n                                    </label>\r\n                                    <button type=\"button\"\r\n                                            className=\"btn btn-outline-success\r\n                                                    add float-right\"\r\n                                            onClick={this.addData}\r\n                                        >Загрузить данные по ИНН\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                <label>Дата регистрации\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control\" \r\n                                        value={registrationDate} \r\n                                        onChange={this.handleChange} \r\n                                        name=\"registrationDate\"/>\r\n                                </label>\r\n                                <button className=\"btn btn-outline-dark \r\n                                                add float-right\"\r\n                                    disabled={disabled} \r\n                                    onSubmit={this.handleSubmit}> \r\n                                    Добавить\r\n                                </button>\r\n                                </div>\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport TableList from '../table-list';\r\nimport ModalView from '../modal-view';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    newId = 0;\r\n\r\n    createCompanyItem = (companyName, companyAddress, \r\n        ogrn, inn, registrationDate) => {\r\n                return {\r\n                    companyName,\r\n                    companyAddress,\r\n                    ogrn,\r\n                    inn,\r\n                    registrationDate: new Date(registrationDate).toLocaleDateString(),\r\n                    id: this.newId++\r\n                }\r\n            };\r\n\r\n    state = {\r\n        companyList: [\r\n            this.createCompanyItem('Example company', 'Example address', '1026600727020', '6606015817', '04.10.2002'),\r\n            this.createCompanyItem('ООО \"НПФ \"Резольвента\"', 'г Екатеринбург, пер. Асбестовский, д4Ж', '1116658004000', '6658378392', '02.25.2011'),\r\n        ],\r\n        modalVisible: false\r\n    };\r\n    \r\n\r\n    onItemEdit = (id, value) => {\r\n        this.setState(({companyList}) => {\r\n            const indx = companyList.findIndex((item) => item.id === id );\r\n            let item = companyList[indx];\r\n            item.companyAddress = value;\r\n\r\n            const newList =  [...companyList.slice(0, indx), item, ...companyList.slice(indx + 1)];\r\n            return {\r\n                companyList: newList\r\n            };\r\n        });\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({companyList}) => {\r\n            const indx = companyList.findIndex((item) => item.id === id );\r\n\r\n            const newList = [...companyList.slice(0, indx), ...companyList.slice(indx + 1)];\r\n\r\n            return {\r\n                companyList: newList\r\n            };\r\n        });\r\n    };\r\n\r\n    modalToggle = () => {\r\n        this.setState(({modalVisible}) => {\r\n            return {\r\n                modalVisible: !modalVisible\r\n            };\r\n        });\r\n    };\r\n\r\n    itemAdd = ({companyName, companyAddress, \r\n        ogrn, inn, registrationDate}) => {\r\n            const newItem = this.createCompanyItem(companyName, companyAddress, \r\n                ogrn, inn, registrationDate);  \r\n                \r\n            this.setState(({companyList}) => {\r\n                const newList = [...companyList, newItem];\r\n                return {\r\n                    companyList: newList\r\n                };\r\n            });\r\n    };\r\n\r\n    \r\n    render() {\r\n        const {companyList, modalVisible} = this.state;\r\n\r\n        return (\r\n            <div className=\"app container\">\r\n                <h2>Список компаний</h2>\r\n                <ModalView modalVisible={modalVisible} \r\n                    itemAdd={this.itemAdd}\r\n                    modalToggle={this.modalToggle}/>\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-secondary float-right\"\r\n                    onClick={() => this.modalToggle()}\r\n                    >Добавить</button>\r\n                <div className=\"company-list\">\r\n                    <TableList \r\n                        itemEdit={(id, value) => this.onItemEdit(id,value)}\r\n                        companyList={companyList}\r\n                        onDeleted={(id) => this.deleteItem(id)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}